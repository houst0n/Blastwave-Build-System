--- miniupnpd-1.6.20120207/Makefile	2012-02-06 08:28:25.000000000 -0800
+++ miniupnpd-1.6.20120207-patched/Makefile	2012-02-28 20:32:44.766001986 -0800
@@ -11,57 +11,61 @@
 # Linux users, please use Makefile.linux :
 #  make -f Makefile.linux
 
-CFLAGS = -pipe -Wall -Os -ansi
+# CFLAGS = -pipe -Wall -Os -ansi
 #CFLAGS = -pipe -Wall -O -g -DDEBUG -ansi
-CC ?= gcc
+# CC ?= gcc
 RM = rm -f
 MV = mv
 INSTALL = install
 STRIP = strip
 
 # OSNAME and FWNAME are used for building OS or FW dependent code.
-OSNAME != uname -s
-ARCH != uname -m
-.ifndef FWNAME
-.if exists(/usr/include/net/pfvar.h)
-FWNAME = pf
-.else
+# OSNAME != uname -s
+# ARCH != uname -m
+OSNAME = $(shell uname -s)
+ARCH = $(shell uname -m)
 FWNAME = ipf
-.endif
-.endif
-
-# better way to find if we are using ipf or pf
-.if $(OSNAME) == "FreeBSD"
-FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
-          if checkyesno ipfilter_enable; then \
-          echo "ipf"; else echo "pf"; fi
-.endif
-
-.if $(OSNAME) == "NetBSD"
-FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
-          if checkyesno ipfilter; then \
-          echo "ipf"; else echo "pf"; fi
-.endif
-
-.if $(OSNAME) == "DragonFly"
-FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
-          if chechyesno ipfilter; then \
-          echo "ipf"; else echo "pf"; fi
-.endif
-
-.if $(OSNAME) == "Darwin"
-FWNAME = ipfw
-.endif
+# .ifndef FWNAME
+# .if exists(/usr/include/net/pfvar.h)
+# FWNAME = pf
+# .else
+# FWNAME = ipf
+# .endif
+# .endif
+
+# # better way to find if we are using ipf or pf
+# .if $(OSNAME) == "FreeBSD"
+# FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
+#           if checkyesno ipfilter_enable; then \
+#           echo "ipf"; else echo "pf"; fi
+# .endif
+
+# .if $(OSNAME) == "NetBSD"
+# FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
+#           if checkyesno ipfilter; then \
+#           echo "ipf"; else echo "pf"; fi
+# .endif
+
+# .if $(OSNAME) == "DragonFly"
+# FWNAME != . /etc/rc.subr; . /etc/rc.conf; \
+#           if chechyesno ipfilter; then \
+#           echo "ipf"; else echo "pf"; fi
+# .endif
+
+# .if $(OSNAME) == "Darwin"
+# FWNAME = ipfw
+# .endif
 
 # Solaris specific CFLAGS
-.if $(OSNAME) == "SunOS"
 CFLAGS += -DSOLARIS2=`uname -r | cut -d. -f2`
-.if $(ARCH) == "amd64"
-CFLAGS += -m64 -mcmodel=kernel -mno-red-zone -ffreestanding
-.elif $(ARCH) == "sparc64"
-CFLAGS += -m64 -mcmodel=medlow
-.endif
-.endif
+# .if $(OSNAME) == "SunOS"
+# CFLAGS += -DSOLARIS2=`uname -r | cut -d. -f2`
+# .if $(ARCH) == "amd64"
+# CFLAGS += -m64 -mcmodel=kernel -mno-red-zone -ffreestanding
+# .elif $(ARCH) == "sparc64"
+# CFLAGS += -m64 -mcmodel=medlow
+# .endif
+# .endif
 
 STDOBJS = miniupnpd.o upnphttp.o upnpdescgen.o upnpsoap.o \
           upnpredirect.o getifaddr.o daemonize.o upnpglobalvars.o \
@@ -76,24 +80,27 @@
 MISCOBJS = upnpreplyparse.o minixml.o
 
 ALLOBJS = $(STDOBJS) $(MISCOBJS)
-.if $(OSNAME) == "SunOS"
 ALLOBJS += $(SUNOSOBJS)
 TESTGETIFSTATSOBJS = testgetifstats.o solaris/getifstats.o
-.elif $(OSNAME) == "Darwin"
-ALLOBJS += $(MACOBJS)
-TESTGETIFSTATSOBJS = testgetifstats.o mac/getifstats.o
-.else
-ALLOBJS += $(BSDOBJS)
-TESTGETIFSTATSOBJS = testgetifstats.o bsd/getifstats.o
-.endif
-
-.if $(FWNAME) == "pf"
-ALLOBJS += $(PFOBJS)
-.elif $(FWNAME) == "ipfw"
-ALLOBJS += $(IPFWOBJS)
-.else
+# .if $(OSNAME) == "SunOS"
+# ALLOBJS += $(SUNOSOBJS)
+# TESTGETIFSTATSOBJS = testgetifstats.o solaris/getifstats.o
+# .elif $(OSNAME) == "Darwin"
+# ALLOBJS += $(MACOBJS)
+# TESTGETIFSTATSOBJS = testgetifstats.o mac/getifstats.o
+# .else
+# ALLOBJS += $(BSDOBJS)
+# TESTGETIFSTATSOBJS = testgetifstats.o bsd/getifstats.o
+# .endif
+
 ALLOBJS += $(IPFOBJS)
-.endif
+# .if $(FWNAME) == "pf"
+# ALLOBJS += $(PFOBJS)
+# .elif $(FWNAME) == "ipfw"
+# ALLOBJS += $(IPFWOBJS)
+# .else
+# ALLOBJS += $(IPFOBJS)
+# .endif
 
 TESTUPNPDESCGENOBJS = testupnpdescgen.o upnpdescgen.o
 TESTUPNPPERMISSIONSOBJS = testupnppermissions.o upnppermissions.o
@@ -103,14 +110,15 @@
 EXECUTABLES = miniupnpd testupnpdescgen testgetifstats \
               testupnppermissions miniupnpdctl \
               testgetifaddr
-.if $(OSNAME) == "Darwin"
-LIBS =
-.else
-LIBS = -lkvm
-.endif
-.if $(OSNAME) == "SunOS"
 LIBS += -lsocket -lnsl -lkstat -lresolv
-.endif
+# .if $(OSNAME) == "Darwin"
+# LIBS =
+# .else
+# LIBS = -lkvm
+# .endif
+# .if $(OSNAME) == "SunOS"
+# LIBS += -lsocket -lnsl -lkstat -lresolv
+# .endif
 
 # set PREFIX variable to install in the wanted place
 
@@ -141,12 +149,13 @@
 # genuuid is using the uuid cli tool available under OpenBSD 4.0 in
 # the uuid-1.5.0 package
 # any other cli tool returning a uuid on stdout should work.
-UUID != if which uuidgen 2>&1 > /dev/null; then \
-        echo `uuidgen` ; \
-        elif which uuid 2>&1 > /dev/null; then \
-        echo `uuid` ; \
-        else echo "00000000-0000-0000-0000-000000000000"; \
-        fi
+UUID = "00000000-0000-0000-0000-000000000000"
+# UUID != if which uuidgen 2>&1 > /dev/null; then \
+#         echo `uuidgen` ; \
+#         elif which uuid 2>&1 > /dev/null; then \
+#         echo `uuid` ; \
+#         else echo "00000000-0000-0000-0000-000000000000"; \
+#         fi
 
 genuuid:
 	$(MV) miniupnpd.conf miniupnpd.conf.before
@@ -164,19 +173,19 @@
 #	$(CC) $(CFLAGS) -o $@ $> $(LIBS)
 
 miniupnpdctl:	config.h $(MINIUPNPDCTLOBJS)
-	$(CC) $(CFLAGS) -o $@ $(MINIUPNPDCTLOBJS)
+	$(CC) $(CFLAGS) -o $@ $(MINIUPNPDCTLOBJS) $(LIBS)
 
 testupnpdescgen:	config.h $(TESTUPNPDESCGENOBJS)
-	$(CC) $(CFLAGS) -o $@ $(TESTUPNPDESCGENOBJS)
+	$(CC) $(CFLAGS) -o $@ $(TESTUPNPDESCGENOBJS) $(LIBS)
 
 testgetifstats:	config.h $(TESTGETIFSTATSOBJS)
 	$(CC) $(CFLAGS) -o $@ $(TESTGETIFSTATSOBJS) $(LIBS)
 
 testgetifaddr:	config.h $(TESTGETIFADDROBJS)
-	$(CC) $(CFLAGS) -o $@ $(TESTGETIFADDROBJS)
+	$(CC) $(CFLAGS) -o $@ $(TESTGETIFADDROBJS) $(LIBS)
 
 testupnppermissions:	config.h $(TESTUPNPPERMISSIONSOBJS)
-	$(CC) $(CFLAGS) -o $@ $(TESTUPNPPERMISSIONSOBJS)
+	$(CC) $(CFLAGS) -o $@ $(TESTUPNPPERMISSIONSOBJS) $(LIBS)
 
 # gmake :
 #	$(CC) $(CFLAGS) -o $@ $^
@@ -192,4 +201,3 @@
 
 #	$(CC) $(CFLAGS) -c -o $(.TARGET) $(.IMPSRC)
 
-	
