--- old/contrib/ffmpeg/P01-solaris.patch	Sun Apr 25 17:15:43 2010
+++ new/contrib/ffmpeg/P01-solaris.patch	Thu Jan  6 00:33:19 2011
@@ -1,23 +1,113 @@
-Index: configure
-===================================================================
---- ffmpeg.orig/configure	(revision 22823)
-+++ ffmpeg/configure	(working copy)
-@@ -54,6 +54,9 @@
-     exit 1
- fi
- 
-+# Solaris must use the xpg4 version of grep
-+PATH=/usr/xpg4/bin:$PATH
-+
- show_help(){
- cat <<EOF
- Usage: configure [options]
-@@ -2387,7 +2390,7 @@
- check_cc <<EOF || die "endian test failed"
- unsigned int endian = 'B' << 24 | 'I' << 16 | 'G' << 8 | 'E';
+--- orig/configure      2011-01-05 17:25:34.141380827 -0500
++++ new/configure       2011-01-05 17:31:14.093219964 -0500
+@@ -1,4 +1,4 @@
+-#!/bin/sh
++#!/bin/bash
+ #
+ # FFmpeg configure script
+ #
+@@ -1549,7 +1549,7 @@
+     thing=$1
+     pattern=$2
+     file=$source_path/$3
+-    sed -n "s/^[^#]*$pattern.*([^,]*, *\([^,]*\)\(,.*\)*).*/\1_$thing/p" "$file"
++    /usr/gnu/bin/sed -n "s/^[^#]*$pattern.*([^,]*, *\([^,]*\)\(,.*\)*).*/\1_$thing/p" "$file"
+ }
+
+ ENCODER_LIST=$(find_things  encoder  ENC      libavcodec/allcodecs.c)
+@@ -1898,7 +1898,7 @@
+         gcc)
+             check_native(){
+                 $cc $1=native -v -c -o $TMPO $TMPC >$TMPE 2>&1 || return
+-                sed -n "/$1=/{
++                /usr/gnu/bin/sed -n "/$1=/{
+                             s/.*$1=\\([^ ]*\\).*/\\1/
+                             p
+                             q
+@@ -2365,7 +2365,7 @@
+ check_cc <<EOF || die "Symbol mangling check failed."
+ int ff_extern;
  EOF
--od -t x1 $TMPO | grep -q '42 *49 *47 *45' && enable bigendian
-+/usr/bin/tr -cd "BIGE" < $TMPO | grep -q 'B *I *G *E' && enable bigendian
+-sym=$($nm $nm_opts $TMPO | awk '/ff_extern/{ print substr($0, match($0, /[^ \t]*ff_extern/)) }')
++sym=$($nm $nm_opts $TMPO | gawk '/ff_extern/{ print substr($0, match($0, /[^ \t]*ff_extern/)) }')
+ extern_prefix=${sym%%ff_extern*}
+
+ check_cc <<EOF && enable inline_asm
+@@ -3047,7 +3047,7 @@
+ get_version(){
+     name=$1
+     file=$source_path/$2
+-    eval $(grep "#define ${name}_VERSION_M" "$file" | awk '{ print $2"="$3 }')
++    eval $(grep "#define ${name}_VERSION_M" "$file" | gawk '{ print $2"="$3 }')
+     eval ${name}_VERSION=\$${name}_VERSION_MAJOR.\$${name}_VERSION_MINOR.\$${name}_VERSION_MICRO
+     lcname=$(tolower $name)
+     eval echo "${lcname}_VERSION=\$${name}_VERSION" >> config.mak
+--- ffmpeg/version.sh	Sat Jun  7 03:19:09 2008
++++ ffmpeg.solaris/version.sh	Sat Jun  7 03:19:09 2008
+@@ -1,40 +1,6 @@
+-#!/bin/sh
++#!/bin/ksh
  
- if enabled alpha; then
+-# check for SVN revision number
+-revision=$(cd "$1" && cat snapshot_version 2> /dev/null)
+-test $revision || revision=$(cd "$1" && LC_ALL=C svn info 2> /dev/null | grep "Last Changed Rev" | cut -d' ' -f4)
+-test $revision || revision=$(cd "$1" && grep committed-rev .svn/entries 2>/dev/null | head -n 1 | cut -d '"' -f2)
+-test $revision || revision=$(cd "$1" && sed -n -e '/^dir$/{n
+-p
+-q
+-}' .svn/entries 2>/dev/null)
+-test $revision && revision=SVN-r$revision
+-
+-# check for git svn revision number
+-if ! test $revision; then
+-    revision=$(cd "$1" && git svn find-rev HEAD 2> /dev/null)
+-    test $revision && revision=git-svn-r$revision
+-fi
+-
+-# check for git short hash
+-if ! test $revision; then
+-    revision=$(cd "$1" && git log -1 --pretty=format:%h 2> /dev/null)
+-    test $revision && revision=git-$revision
+-fi
+-
+-# no revision number found
+-test $revision || revision=UNKNOWN
+-
+-# releases extract the version number from the VERSION file
+-version=$(cd "$1" && cat VERSION 2> /dev/null)
+-test $version || version=$revision
+-
+-test -n "$3" && version=$version-$3
+-
+-if [ -z "$2" ]; then
+-    echo "$version"
+-    exit
+-fi
++version=0.6.1
  
+ NEW_REVISION="#define FFMPEG_VERSION \"$version\""
+ OLD_REVISION=$(cat version.h 2> /dev/null)
+--- ffmpeg/tests/codec-regression.sh    Sat Jun  7 03:19:09 2008
++++ ffmpeg.solaris/tests/codec-regression.sh    Thu Jun 19 12:10:48 2008
+@@ -1,4 +1,4 @@
+-#!/bin/sh
++#!/bin/bash
+ #
+ # automatic regression test for ffmpeg
+ #
+--- ffmpeg.orig/libavcodec/mlp.h.orig   Sun Dec 26 17:50:15 2010
++++ ffmpeg/libavcodec/mlp.h     Sun Dec 26 17:51:57 2010
+@@ -53,9 +53,11 @@
+ #define MAX_SAMPLERATE      (MAX_RATEFACTOR * 48000)
+ 
+ /** maximum number of audio samples within one access unit */
+-#define MAX_BLOCKSIZE       (40 * MAX_RATEFACTOR)
++/*#define MAX_BLOCKSIZE       (40 * MAX_RATEFACTOR)*/
++#define MAX_BLOCKSIZE 160
+ /** next power of two greater than MAX_BLOCKSIZE */
+-#define MAX_BLOCKSIZE_POW2  (64 * MAX_RATEFACTOR)
++/*#define MAX_BLOCKSIZE_POW2  (64 * MAX_RATEFACTOR)*/
++#define MAX_BLOCKSIZE_POW2 256
+ 
+ /** number of allowed filters */
+ #define NUM_FILTERS         2
