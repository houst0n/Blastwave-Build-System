--- scorched/src/server/tankai/TankAICurrentTarget.cpp	Mon Dec 29 18:38:23 2008
+++ scorched/src/server/tankai/TankAICurrentTarget.cpp	Fri Dec 30 10:00:26 2011
@@ -179,20 +179,20 @@
 
 		if (damageTaken_.find(currentTank) != damageTaken_.end())
 		{
-			damageTakenSorted.insert(std::pair<float, Tank *>(
+			damageTakenSorted.insert(std::pair<const float, Tank *>(
 				damageTaken_[currentTank], currentTank));
 		}
 		if (damageGiven_.find(currentTank) != damageGiven_.end())
 		{
-			damageGivenSorted.insert(std::pair<float, Tank *>(
+			damageGivenSorted.insert(std::pair<const float, Tank *>(
 				damageGiven_[currentTank], currentTank));
 		}
 		if (shotAt_.find(currentTank) != shotAt_.end())
 		{
-			shotAtSorted.insert(std::pair<float, Tank *>(
+			shotAtSorted.insert(std::pair<const float, Tank *>(
 				shotAt_[currentTank], currentTank));
 		}
-		distanceSorted.insert(std::pair<float, Tank *>(
+		distanceSorted.insert(std::pair<const float, Tank *>(
 			((currentTank->getPosition().getTankPosition() - 
 			thisTank->getPosition().getTankPosition()).Magnitude()).asFloat(), currentTank));
 	}
@@ -233,7 +233,7 @@
 			damagetakenScore * damagetaken_ +
 			damagedoneScore * damagedone_ +
 			distanceScore * distance_;
-		weightedTanks.insert(std::pair<float, Tank *>(weight, currentTank));
+		weightedTanks.insert(std::pair<const float, Tank *>(weight, currentTank));
 	}
 
 	// Form the final list
--- scorched/src/server/tankai/TankAIWeaponSets.cpp	Sun Jun 27 03:28:31 2010
+++ scorched/src/server/tankai/TankAIWeaponSets.cpp	Fri Dec 30 10:00:26 2011
@@ -119,7 +119,7 @@
 			if (weapon.weaponValid(tankAccessories, lastRound))
 			{
 				potentialWeapons.insert(
-					std::pair<unsigned int, WeaponSetEntry *>
+					std::pair<const unsigned int, WeaponSetEntry *>
 						(weapon.prioritybuy, &weapon));
 			}
 		}
--- scorched/src/server/server/ServerStateEnoughPlayers.cpp	Mon Jun 28 02:51:32 2010
+++ scorched/src/server/server/ServerStateEnoughPlayers.cpp	Fri Dec 30 10:01:05 2011
@@ -171,7 +171,7 @@
 		{
 			unsigned int startTime = (unsigned int)
 				current->getScore().getStartTime();
-			ais_.insert(std::pair<unsigned int, unsigned int>
+			ais_.insert(std::pair<const unsigned int, unsigned int>
 				(startTime, current->getPlayerId()));
 		}
 	}
@@ -182,7 +182,7 @@
 		noPlayers > requiredPlayers && aiItor != ais_.rend(); 
 		aiItor++, noPlayers--)
 	{
-		std::pair<unsigned int, unsigned int> item = *aiItor;
+		std::pair<const unsigned int, unsigned int> item = *aiItor;
 		ScorchedServer::instance()->getServerMessageHandler().destroyPlayer(
 			item.second, "Auto-kick");
 	}
@@ -205,7 +205,7 @@
 		if (current->getDestinationId() == 0 &&
 			!current->getTankAI()->removedPlayer())
 		{
-			ais_.insert(std::pair<std::string, unsigned int>
+			ais_.insert(std::pair<const std::string, unsigned int>
 				(current->getTankAI()->getName(), 
 				current->getPlayerId()));
 		}
--- scorched/src/client/console/ConsoleRules.cpp	Mon Feb 23 04:14:20 2009
+++ scorched/src/client/console/ConsoleRules.cpp	Fri Dec 30 10:00:26 2011
@@ -38,7 +38,7 @@
 
 	std::string addName = rule->getName();
 	_strlwr((char *) addName.c_str());
-	rules_.insert(std::pair<std::string, ConsoleRule *>(addName, rule));
+	rules_.insert(std::pair<const std::string, ConsoleRule *>(addName, rule));
 }
 
 void ConsoleRules::removeRule(ConsoleRule *rule) 
@@ -189,7 +189,7 @@
 	{
 		ConsoleRule *rule = itor->second;
 		matchedRules.insert(
-			std::pair<int, ConsoleRule *>(
+			std::pair<const int, ConsoleRule *>(
 				(int) rule->getParams().size(), rule));
 	}
 
--- scorched-patch/src/common/landscapemap/HeightMap.h	Wed May 19 01:12:10 2010
+++ scorched/src/common/landscapemap/HeightMap.h	Fri Dec 30 10:09:27 2011
@@ -34,7 +34,7 @@
 	HeightMap();
 	virtual ~HeightMap();
 
-	void create(int width, int height, bool invertedNormals);
+	void create(const int width, const int height, bool invertedNormals);
 	void reset();
 
 	// Height map size fns
